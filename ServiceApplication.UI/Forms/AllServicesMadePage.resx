<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefreshData.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAALAAAACwARRqq2kAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADxklEQVRYR62XSWgTURjHtYp4cEOEClVEUFHoSQUvvUjV2lj3VtMliILgUdHSJHgIePDqwRUvol2z
        KIraTC51o+BB8SKISyaZaV1mQlu10Fat4/8b++T15YuZag+/lnl58/3+mXlbZjiO45mwNlDekrLCoZTd
        FdSs3uak1V/dlv6+q0Mf2tuZ1Wu7zMf1sb7D3L2FYBtlIj363BYtFwxq9jvgyJzqtpzK6+/y8LXrYwei
        hha4bZZzNWXYRkFIs2qDWk5XxYJCAQRVN9I//VHzPFdbwDZGeqx5EHSrQpViAQR7OjOm/46+hnPlNUR6
        BhfR++WEKl4DEL629Gh9/ONK2XXolr5okvxkz/slwaT9nJMxjDV32y92tme++Nr0b1tu8GIZ9B1qbH2z
        gFyBWL9vR7s+MilAMGXfZUQSVm8oaR8NJ+31kagzR7730F291B8zrtCM4OSCvXgdB2PGta0Tgf8UaNFs
        Py8lrBw4go4zZWkh/FHj6jYMQFXO4d5wIvl5MUSf8sUuH0Jabq0qKUZD1KzY3pr+wUll3M4QnGHEDsaD
        /S9yQSDWd7DYk3A7QvYqT+5iHVGLTgUaFxh4g5xY4C6vnDyk2U9RxdM752i8ZeyjFZGTytC3j6hyIpTM
        BbjCXgjcNDbQ1OSEKghgXeACNN+zlnLFvVKHaVofN05jk8qKKcfhdg4mrVUTAzHrBkjZL9WC/0PgTv9y
        7AnXazoyn/MCQLhBdIxEnJJwKldJi41cYDppSBiVtVHjEW3jIgA9cpoFYbCMu2k6wCp5sTFuNolr/Clp
        iBvHRQDBONBAPZgrF/hfdrTpI/SN8X8UZ4V7TYk+98mrAWSGwGWwSS02VSArl9+7YH9X9vnfAsi8AKVc
        cS9g87nKBaCx4CUAHcX+DNSpEkj0ldS061+5ABgTdcUCPAQLucJeoS2ak9NCRZ8XC0DjYJ1a1CtNCXNz
        VWt6nAtQ22X0Uh8vryANprwqYuBVVLf+nusqCPUTn7u7rNdB+BH4VEkh/DHz3N/OAngtl0VfEWAMnAT3
        J64LEQVVYJYsJBoT5lYUvkTnPk4q2NWRycn3UYC3YCNd4D8dx58BTi5jgyf4ZdS5uyNjb8Mj5WQqtBjR
        mqAGmC834HopKPhjRAYBWBEHpuIw5KtlFzHpQoDiZSApyzi8BsBjH8B6UMa58hpkIDkGhmWpTLEANBBp
        XNBixNUn2EYZiFaAs+C9EAsKBYB4vC5qPIB4CVdThm3kgHAWqAG0QaXAawQYpdNONVY1POZBbC7PGuLm
        MYhnczXycWb8AvQxhZMfy6WsAAAAAElFTkSuQmCC
</value>
  </data>
</root>