<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefreshData.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        rgAAAK4B+ff3XQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPGSURBVFhHrZdJ
        aBNRGMe1inhwQ4QKVURQUehJBS+9SNXaWPdW0yWIguBR0dIkeAh48OrBFS+iXbMoitpMLnWj4EHxIohL
        JplpXWZCW7XQVq3j/xv75PXli5lqD7+WeXnz/f6ZeVtmOI7jmbA2UN6SssKhlN0V1Kze5qTVX92W/r6r
        Qx/a25nVa7vMx/WxvsPcvYVgG2UiPfrcFi0XDGr2O+DInOq2nMrr7/LwtetjB6KGFrhtlnM1ZdhGQUiz
        aoNaTlfFgkIBBFU30j/9UfM8V1vANkZ6rHkQdKtClWIBBHs6M6b/jr6Gc+U1RHoGF9H75YQqXgMQvrb0
        aH3840rZdeiWvmiS/GTP+yXBpP2ckzGMNXfbL3a2Z7742vRvW27wYhn0HWpsfbOAXIFYv29Huz4yKUAw
        Zd9lRBJWbyhpHw0n7fWRqDNHvvfQXb3UHzOu0Izg5IK9eB0HY8a1rROB/xRo0Ww/LyWsHDiCjjNlaSH8
        UePqNgxAVc7h3nAi+XkxRJ/yxS4fQlpurSopRkPUrNjemv7BSWXczhCcYcQOxoP9L3JBINZ3sNiTcDtC
        9ipP7mIdUYtOBRoXGHiDnFjgLq+cPKTZT1HF0zvnaLxl7KMVkZPK0LePqHIilMwFuMJeCNw0NtDU5IQq
        CGBd4AI037OWcsW9UodpWh83TmOTyoopx+F2DiatVRMDMesGSNkv1YL/Q+BO/3LsCddrOjKf8wJAuEF0
        jEScknAqV0mLjVxgOmlIGJW1UeMRbeMiAD1ymgVhsIy7aTrAKnmxMW42iWv8KWmIG8dFAME40EA9mCsX
        +F92tOkj9I3xfxRnhXtNiT73yasBZIbAZbBJLTZVICuX37tgf1f2+d8CyLwApVxxL2DzucoFoLHgJQAd
        xf4M1KkSSPSV1LTrX7kAGBN1xQI8BAu5wl6hLZqT00JFnxcLQONgnVrUK00Jc3NVa3qcC1DbZfRSHy+v
        IA2mvCpi4FVUt/6e6yoI9ROfu7us10H4EfhUSSH8MfPc384CeC2XRV8RYAycBPcnrgsRBVVgliwkGhPm
        VhS+ROc+TirY1ZHJyfdRgLdgI13gPx3HnwFOLmODJ/hl1Lm7I2NvwyPlZCq0GNGaoAaYLzfgeiko+GNE
        BgFYEQem4jDkq2UXMelCgOJlICnLOLwGwGMfwHpQxrnyGmQgOQaGZalMsQA0EGlc0GLE1SfYRhmIVoCz
        4L0QCwoFgHi8Lmo8gHgJV1OGbeSAcBaoAbRBpcBrBBil0041VjU85kFsLs8a4uYxiGdzNfJxZvwC9DGF
        kx/LpawAAAAASUVORK5CYII=
</value>
  </data>
</root>